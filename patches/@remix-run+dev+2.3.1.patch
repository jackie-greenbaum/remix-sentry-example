diff --git a/node_modules/@remix-run/dev/dist/compiler/server/compiler.js b/node_modules/@remix-run/dev/dist/compiler/server/compiler.js
index e70ce73..3e9b7bd 100644
--- a/node_modules/@remix-run/dev/dist/compiler/server/compiler.js
+++ b/node_modules/@remix-run/dev/dist/compiler/server/compiler.js
@@ -74,6 +74,23 @@ const createEsbuildConfig = (ctx, refs) => {
   if (ctx.config.serverNodeBuiltinsPolyfill) {
     plugins.unshift(serverNodeBuiltinsPolyfill.serverNodeBuiltinsPolyfillPlugin(ctx));
   }
+
+  // Apply workaround from https://github.com/evanw/esbuild/issues/1921#issuecomment-1152991694
+  // to avoid "Dynamic require of <pkg> not supported" errors when bundling sevrer packages
+  let bannerObj = {};
+  if (ctx.config.serverModuleFormat === "esm" && ctx.config.serverPlatform === "node") {
+    bannerObj = {
+      banner: {
+        js: `
+          const require = await (async () => {
+            const { createRequire } = await import("node:module");
+
+            return createRequire(import.meta.url);
+          })();
+        `
+      }
+    };
+  }
   return {
     absWorkingDir: ctx.config.rootDirectory,
     stdin,
@@ -82,6 +99,7 @@ const createEsbuildConfig = (ctx, refs) => {
     conditions: ctx.config.serverConditions,
     platform: ctx.config.serverPlatform,
     format: ctx.config.serverModuleFormat,
+    ...bannerObj,
     treeShaking: true,
     // The type of dead code elimination we want to do depends on the
     // minify syntax property: https://github.com/evanw/esbuild/issues/672#issuecomment-1029682369
